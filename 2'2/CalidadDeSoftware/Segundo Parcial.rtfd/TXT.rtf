{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf610
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww31800\viewh16580\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 \ul \ulc0 METRICAS:\
\

\b0 \ulnone Metrica se realiza para tomar desiciones y predecir (saber como estoy)\
\
Metricas que no se usan es un costo de no calidad\
\
Para mejorar si o si hay que medirlo\
\
Para mediar algo le asignamos una unidad de medida\
\
Entregar un producto de calidad, estimar cuanto tardamos en desarrollar ese proyecto, estimar el costo del proyecto\
\
Atributo: debe ser medible, puede ser f\'edsica o abstracto\
\

\b \ul Medida
\b0 \ulnone : es el resultado de una medici\'f3n\
Una medida no nos dice nada sin el contexto\'85 \

\b \ul Metrica
\b0 \ulnone : relaciona de alguna manera las medidas individuales. Los indicadores son los que le dan el contexto a la metrica \

\b \ul Indicador
\b0 \ulnone : Interpretacion de una metrica\'85 tiene que estar dentro de un rango \
Para que me sirve que este bien o mal\'85 es para tomar desiciones\
Los indicadores con un contexto para una empresa es distinta para otra, cada proyecto tiene distinto rango de valores.\
Los indicadores se representan con un color o una palabra.\
\
La metrica la define el MANAGER y el QA\
La metrica es un medici\'f3n y termina en un rango de valores. El 
\b CONTEXTO
\b0   (es el indicador) es lo primordial en un metrica, hay que entender para sacar una metrica.\
\
Tipos de m\'e9tricas:\
\
Medidas Directas: se obtienen en base a mediciones\'85 son f\'e1ciles de calcular\
Medidas Indirectas: son subjetivas\'85 por ejemplo los esfuerzos (Story Points)\'85 depende mucho del desarrollador.\
\
M\'e9tricas de punto de funci\'f3n\
M\'e9tricas de puntos de casos de uso\
M\'e9tricas de errores por lineas de codigo\
\

\b \ul REVISIONES DE TECNICAS FORMALES:\
\

\b0 \ulnone Tambi\'e9n llamadas testing est\'e1tico, porque tienen el mismo objetivo del testing (encontrar errores), ingresa un dato al sistema y validamos la salida.\
\
Revisiones de entregables\
Lo que se hace con esta t\'e9cnica es revisarlo y prevenir errores.\
Ac\'e1 lo que se revisa es el producto\'85 no quien lo hace.\
Las revisiones en si son reuniones, vemos casos de uso o codigo. Tambi\'e9n se lo conoce como Pyu review (revisiones por pares)\
\
Hay dos tipos de revisiones:\
\
Formales: son met\'f3dicas e estructuradas.\
Inspeccion es la formal\
Informales:\
\
ROLES:\
\
Moderador: Por lo general es el QA tienen que saber del tema de que se esta hablando (casos de usos, etc). Sino puede ser otra persona id\'f3nea.\
Revisores: \
\

\b Lo mas critico de un sistema es la arquitectura. Son los planos de una casa.\

\b0 Identifacar los entregadles a revisiones\'85 para saber si se entiendo el requerimiento para su respectivo desarrollo.\
\
Si es una arquitectura hacemos una revision informal y si es un documento escrito hacemos una formal.\
\
No solo se revisa el producto, el moderador tambi\'e9n revisa el proceso.\
\
Las revisiones suelen ser muy costosas desde el lado de los recursos \
\
Las inspecciones son revisados por los pares son formales.\
\
Las walkthrough son las informales que revisan gr\'e1ficos o codigo\
\
4 etapas del proceso de revisi\'f3n de Formales:\
\
Revisar el producto, no al autor\
Establecer una agenda y respetarla\
Limitar el debate y la impugnaci\'f3n\
Enunciar \'e1reas de problemas, no resolverlos\
\
Revisiones Formales se revisa mas los casos escritos.\
Tenemos que tener una metrica que nos diga que tenemos bastante errores para realizar la revisi\'f3n formal, dado que esta es muy costosa si no tenemos errores.\
\
En los modelos interpretativos se realizan revisiones informales (gr\'e1ficos, casos de uso, etc)\
\
-En la informal el autor va a tener que dar una explicaci\'f3n mas compleja y extensa.\
Se detectan mas sugerencias que errores, pero se pueden detectar errores. Se les avisa al autor para que haga las correcciones.\
\
-En la formal es mas corta porque ya estuvo revisado anteriormente\
\
Las revisiones no deben durar mas de 2 horas y no deber\'edan ser mas de 5 revisores, mas el moderador y el autor.\
\
\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Captura de pantalla 2022-11-14 a la(s) 14.48.44.png \width6720 \height6100 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\b \ul \
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \ulc0 \

\b0 \ulnone \
\

\b \ul MODELOS DE CALIDAD:
\b0 \ulnone \
\
\ul Modelos de Calidad:\ulnone \
\
ISO 9126 - McCall - Boehm - Dromey (modelo de productos de calidad de Software)\
\
Es el \'fanico que se certifica\
\
Todos apuntan mas o menos a lo mismo\
\
\ul Modelos de Procesos:\ulnone \
\
ISO - CMMI\
\
\
\ul Atributos de calidad De Productos y Procesos\ulnone \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Captura de pantalla 2022-11-14 a la(s) 10.39.41.png \width13040 \height10220 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\
\
Para determinar si el producto es seguro, hay que generar m\'e9tricas de seguridad para luego ver los indicadores que nos dar\'e1 una conclusi\'f3n final de si el producto es seguro o no\
\
\ul Porque las empresas se certifican bajo las normas de seguridad:\ulnone \
\
1- para poder ser proveedor\
2- Para poder operar o exportar a Europa\
3- Hay una ley argentina de Software que si estas inscripto pagas menos de cargas sociales, y ademas beneficios.\
\
\ul Resumen de Modelo de calidad de Producto\ulnone \
\
Lo que hace es evaluar los atributo de calidad y estos estan asociados a una m\'e9trica que me dice como mide cada atributo y est\'e1n asociados a diferentes indicadores que van a depender del tipo de negocio\
\
\
\ul Que es ISO9000?\
\
Es un standard de calidad\
Tiene que cumplir ciertos procesos un producto para certificar\
\ulnone ISO puede certificar cualquier empresa de distinto rubro\
\
Para certificar ISO tener que contactar a alguna empresa certificadora\
Luego tienes que leer el modelo para poder llevarlo a nuestra empresa\'85. Gesti\'f3n de calidad\
Nos define que cosas tenemos que realizar a lo que la norma nos pide\
Nos manda un auditor gu\'eda\
Luego viene la auditoria formal\
El equipo de auditores son lo de las empresas auditoras mas lo de la empresa auditara\
El auditor vienen con un check-list cumple o no cumple seg\'fan la norma\'85 para eso necesitamos el alcance a que proyectos le eplicamos la norma\
Entrevistan a las personas de la empresas y le preguntan que hacen, como lo hacen y si esta documentado ese proceso de trabajo que hace.\
Tiene que estar bien documentado y se basa en el ciclo de Deming es un ciclo de mejora continua\
\
Auditoria de Mantenimiento\
\
Se realiza cada 6 meses para asegurar que el sistema de calidad se desarrolle en forma adecuada\
La certificaci\'f3n tiene una validez de 3 a\'f1os\
\
SMMI\
\
Esta orienta a Software\
Es de EEUU\
Modelos - motos de evaluaci\'f3n - material de entrenamiento\
Es mucho mas complejo que ISO\
Se eval\'faa y no se certifica\
Hay que hacer un plan de proyecto, dice que hay que hacer no como debe hacerse\
Tiene distintos niveles y se arranca por el nivel 2 que es el mas bajo y el nivel 5 el mas alto que es el de mejora continua haber aprendido, haber modificado un proceso y haber visto que se mejoro.\
CMMI 5 tiene que estar muy acompa\'f1ado de la tecnolog\'eda\'85 no podes usar Excel \
\
Que es un escampi	\
\
Un metodo de procesos de como se implementa\
Sigue el m\'e9todo docuementado\
Se basa en evidencias\
Confirma con entrevistas\
\
3 clases de m\'e9todos de SCAMPI\
\
SCAMPI A\
SCAMPI B\
SCAMPI C\
\
Es el nivel de profundidad con el que evaluan el modelo\
El B es el oficial\
No te dan certificado, sino que lo publican en una pagina y si queres podes elegir que no lo publiquen\
\
Porque certificar en CMMI\
\
Para poder trabajar con Estados Unidos\
Es exclusivo para Software\
\
El lider Price es una persona certificada por CMMI que trabaja como certificador de esa norma\
\
\

\b \ul TESTING:\
\

\b0 \ulnone El testing se basa en validaci\'f3n y verificaci\'f3n.\
\
Proceso es QA\
Producto es tenting o control de calidad\
\
Mediante el testing hacemos visible la calidad de los desarrollado\
\
Cuando arranca las tareas de testing?  Cuando tengamos el primer entregable del proyecto (tengamos los casos de prueba)\
\
Cuando terminar? Provee todo y no hay errores, se acabo el tiempo.\
Cuanto tardas en testear? Es por estimaciones que lo hace la experiencia de cada uno que lo haga\
\
TIPOS DE TESTING:\
\
- dinamito/estatico\
Test est\'e1tico: son documentaci\'f3n, \
Test din\'e1mico: tengo una entrada, el sistema lo procesa y da una salida\
\
-test limpios vs sucio:\
\
-Testing funcional o de caja negra\
Hacemos los casos de prueba, probamos el sistema y lo que nos interesa es la entrada y la salida\
\
-teting estructural o de caja blanca\
Recorro el codigo y es mas t\'e9cnico. Se hace con herramientas zonas cue, agarra el codigo y se fija si no se usa, o si hay codigo recursivo.\
\
-Prueba de Stress\
Se realiza para ver el pico de demanda que tiene nuestro producto. Es para asegurarse que nuestro sistema puede soportar esa carga\
\
-Prueba de volumen\
Enfocado en gran cantidad de datos en una base de datos o en una sola transacci\'f3n.\
\
-Test de regresi\'f3n\
Test para verificar que, luego de un cambio, la funcionalidad original que no deb\'eda cambiar no ha sido alterada involuntariamente.\
Muchas veces se entrega versiones y se agregan las release Notes donde se pone que se estuvo haciendo en esa versi\'f3n. \
Se corre un ciclo de pruebas por versi\'f3n\
Una regresi\'f3n es chequear que lo que funcionaba en una versi\'f3n anterior sigue andando. \
La regresi\'f3n no se corre sobre todos los casos de prueba, porque no hay tiempo. Solo se corren en los casos positivos que seleccionamos.\
\
-Test de humo\
\
Pruebas unitaria o unitest: Probas el artefacto. Esto lo hace siempre el desarrollador. Solo probamos los m\'e9todos que queremos ver que devuelva lo que estamos esperando.\
\
Pruebas de integraci\'f3n: Es la etapa de prueba orienta a asegurar que las unidades del software operan correctamente cuando se combinan en la aplicaci\'f3n, ejecutada por el integrador. Estas pruebas pueden ser automatizadas y las puede hacer el Tester o desarrollador.\
\
Pruebas de sistemas: Son pruebas funcionales que hacemos de punta a punta y probamos su funcionalidad\
\
Pruebas de aceptaci\'f3n: Son las que hace el usuario final, son totalmente independiente. Las hace el tester y son mas positivas por lo general.\
Lo que prueba el usuario es lo general y lo que queremos que funcione.\
Las pruebas de alfa se ejecuta en un ambiente de desarrollo o prepro. \
Las pruebas beta son pruebas que se realizan en un ambiente productivo.\
\
Particion de equivalencias: tomar conjuntos positivos y negativos\
\
Registro de errores: Los errores deben ser formalmente registrados para hacer si seguimiento. Los tests que manifiestaron fallas deben repetirse. Deben hacerse testing de regresi\'f3n.\
A la hora de reportar un bug hay que pensar que lo lee otra persona por eso hay que tratar de dar casos como ejemplos o describir el escenario lo mejor posible para que sea lo mas entendible posible. \
\
Plan de prueba tienen que ser los casos de pruebas, cuantos habientes va a haber, como hacer el pasaje de un habiente a otro, criticidad de fallos o errores (baja, medio o alta). Que partes se van a testear y cuales no, si son funcionales o no.\
\
\

\b \ul \

\b0 \ulnone \
\
\
\
\
\
\
\
}